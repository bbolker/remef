% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/asef.R
\name{asef}
\alias{asef}
\title{Find associated effects}
\usage{
asef(model, ef, order = c("higher", "lower", "all"), include.base = FALSE)
}
\arguments{
\item{model}{a model object.}

\item{ef}{a character string (a coefficent label).}

\item{order}{a character string vector giving the order of the
terms to be returned.
One of \code{"higher"} (default), \code{"lower"},
or \code{"all"}, can be abbreviated.}

\item{include.base}{logical. Should the labels in \code{ef}
be included in the output?}
}
\value{
\code{asef} returns vectors of character strings
  (coefficent labels).
}
\description{
This function finds the labels of coefficients associated with
interactions or main effects in the results of various model
fitting functions.
}
\details{
\code{model} is an object returned by a model fitting
  function (e.g., \code{\link{lm}}, \code{\link{aov}}).
  
  The character string passed to \code{ef} must not include the 
  intercept (\code{"(Intercept)"}) since it cannot be part of an
  interaction. All non-intercept labels of any order are allowed.
  
  If \code{order} is \code{"higher"}, all terms of a higher order
  are returned. If \code{order} is \code{"lower"}, all terms of a 
  lower order are returned. If \code{order} is \code{"all"} then
  both terms of lower and higher order are returned. For example,
  if a model fit has the terms \code{A}, \code{B}, \code{C},
  \code{A:B}, \code{B:C}, \code{A:C}, and \code{A:B:C}, terms of 
  higher order relative to \code{A}  are \code{A:B}, \code{A:C}, 
  and \code{A:B:C}. Terms of lower order relative to \code{A:B} are
  \code{A} and \code{B}.
  
  If \code{include.base} is \code{FALSE} (the default), the term
  label in \code{ef} is not part of the returned string vector.
}
\examples{
require(utils)
 
data(iris)
fit <- lm(Sepal.Length ~ Sepal.Width * Petal.Length * Petal.Width, data = iris)
asef(fit, "Petal.Length:Petal.Width", order = "higher")
asef(fit, "Sepal.Width:Petal.Length:Petal.Width", order = "lower")
asef(fit, "Petal.Length:Petal.Width", order = "all")
 
data(warpbreaks)
fit2 <- lm(breaks ~ wool * tension, data = warpbreaks)
# Since wool is a factor, the coefficient has another name, "woolB"
asef(fit2, "woolB", order = "higher")
asef(fit2, "woolB", order = "higher", include.base = TRUE)
}
\seealso{
\code{\link{terms}} for extracting model terms.
}
